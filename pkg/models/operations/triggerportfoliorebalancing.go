// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
)

type TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations struct {
	// List of allocations
	Allocations []string `json:"allocations"`
}

func (o *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations) GetAllocations() []string {
	if o == nil {
		return []string{}
	}
	return o.Allocations
}

type TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts struct {
	// List of accounts
	Accounts []string `json:"accounts"`
}

func (o *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts) GetAccounts() []string {
	if o == nil {
		return []string{}
	}
	return o.Accounts
}

type TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestType string

const (
	TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts    TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestType = "trigger_portfolio_rebalancing_Trigger portfolio rebalancing - Request_Accounts"
	TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestType = "trigger_portfolio_rebalancing_Trigger portfolio rebalancing - Request_Allocations"
)

type TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest struct {
	TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts    *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts
	TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations

	Type TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestType
}

func CreateTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts(triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts) TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest {
	typ := TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts

	return TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest{
		TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts: &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts,
		Type: typ,
	}
}

func CreateTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations(triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations) TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest {
	typ := TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations

	return TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest{
		TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations: &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations,
		Type: typ,
	}
}

func (u *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest) UnmarshalJSON(data []byte) error {

	triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts := TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts{}
	if err := utils.UnmarshalJSON(data, &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts, "", true, true); err == nil {
		u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts = &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts
		u.Type = TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts
		return nil
	}

	triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations := TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations{}
	if err := utils.UnmarshalJSON(data, &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations, "", true, true); err == nil {
		u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations = &triggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations
		u.Type = TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestTypeTriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest) MarshalJSON() ([]byte, error) {
	if u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts != nil {
		return utils.MarshalJSON(u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAccounts, "", true)
	}

	if u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations != nil {
		return utils.MarshalJSON(u.TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequestAllocations, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type TriggerPortfolioRebalancingRequest struct {
	RequestBody *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest `request:"mediaType=application/json"`
	// A UUID to be used as an idempotency key.  This prevents a duplicate request from being replayed.
	// https://docs.upvest.co/concepts/api_concepts/idempotency
	//
	IdempotencyKey string `header:"style=simple,explode=false,name=idempotency-key"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (t TriggerPortfolioRebalancingRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TriggerPortfolioRebalancingRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TriggerPortfolioRebalancingRequest) GetRequestBody() *TriggerPortfolioRebalancingTriggerPortfolioRebalancingRequest {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *TriggerPortfolioRebalancingRequest) GetIdempotencyKey() string {
	if o == nil {
		return ""
	}
	return o.IdempotencyKey
}

func (o *TriggerPortfolioRebalancingRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *TriggerPortfolioRebalancingRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *TriggerPortfolioRebalancingRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *TriggerPortfolioRebalancingRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

// TriggerPortfolioRebalancingTriggerPortfolioRebalancingResponse - Portfolio
type TriggerPortfolioRebalancingTriggerPortfolioRebalancingResponse struct {
	ID string `json:"id"`
}

func (o *TriggerPortfolioRebalancingTriggerPortfolioRebalancingResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type TriggerPortfolioRebalancingResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Portfolio
	TriggerPortfolioRebalancingResponse *TriggerPortfolioRebalancingTriggerPortfolioRebalancingResponse
}

func (o *TriggerPortfolioRebalancingResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *TriggerPortfolioRebalancingResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *TriggerPortfolioRebalancingResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *TriggerPortfolioRebalancingResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *TriggerPortfolioRebalancingResponse) GetTriggerPortfolioRebalancingResponse() *TriggerPortfolioRebalancingTriggerPortfolioRebalancingResponse {
	if o == nil {
		return nil
	}
	return o.TriggerPortfolioRebalancingResponse
}
