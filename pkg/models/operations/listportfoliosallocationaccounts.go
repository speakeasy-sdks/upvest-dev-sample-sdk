// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
)

// ListPortfoliosAllocationAccountsSort - Sort the result by `id`.
type ListPortfoliosAllocationAccountsSort string

const (
	ListPortfoliosAllocationAccountsSortID ListPortfoliosAllocationAccountsSort = "id"
)

func (e ListPortfoliosAllocationAccountsSort) ToPointer() *ListPortfoliosAllocationAccountsSort {
	return &e
}

func (e *ListPortfoliosAllocationAccountsSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		*e = ListPortfoliosAllocationAccountsSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosAllocationAccountsSort: %v", v)
	}
}

type ListPortfoliosAllocationAccountsRequest struct {
	AllocationID string `pathParam:"style=simple,explode=false,name=allocation_id"`
	// Use the `limit` argument to specify the maximum number of items returned.
	Limit *int `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Use the `offset` argument to specify where in the list of results to start when returning items for a particular query.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Sort order of the result list if the `sort` parameter is specified. Use `ASC` for ascending or `DESC` for descending sort order.
	Order *shared.Order `default:"ASC" queryParam:"style=form,explode=true,name=order"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Sort the result by `id`.
	Sort *ListPortfoliosAllocationAccountsSort `default:"id" queryParam:"style=form,explode=true,name=sort"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (l ListPortfoliosAllocationAccountsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosAllocationAccountsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosAllocationAccountsRequest) GetAllocationID() string {
	if o == nil {
		return ""
	}
	return o.AllocationID
}

func (o *ListPortfoliosAllocationAccountsRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPortfoliosAllocationAccountsRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListPortfoliosAllocationAccountsRequest) GetOrder() *shared.Order {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosAllocationAccountsRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *ListPortfoliosAllocationAccountsRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *ListPortfoliosAllocationAccountsRequest) GetSort() *ListPortfoliosAllocationAccountsSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosAllocationAccountsRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *ListPortfoliosAllocationAccountsRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

type ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponsePortfoliosAllocationAccount struct {
	// Account unique identifier.
	ID string `json:"id"`
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponsePortfoliosAllocationAccount) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder - The ordering of the response.
// * ASC - Ascending order
// * DESC - Descending order
type ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder string

const (
	ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrderAsc  ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder = "ASC"
	ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrderDesc ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder = "DESC"
)

func (e ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder) ToPointer() *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder {
	return &e
}

func (e *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder: %v", v)
	}
}

type ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta struct {
	// Count of the resources returned in the response.
	Count int64 `json:"count"`
	// Total limit of the response.
	Limit int64 `json:"limit"`
	// Amount of resource to offset in the response.
	Offset int64 `json:"offset"`
	// The ordering of the response.
	// * ASC - Ascending order
	// * DESC - Descending order
	Order *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder `json:"order,omitempty"`
	// The field that the list is sorted by.
	Sort *string `json:"sort,omitempty"`
	// Total count of all the resources.
	TotalCount int64 `json:"total_count"`
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetCount() int64 {
	if o == nil {
		return 0
	}
	return o.Count
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetOffset() int64 {
	if o == nil {
		return 0
	}
	return o.Offset
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetOrder() *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMetaOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta) GetTotalCount() int64 {
	if o == nil {
		return 0
	}
	return o.TotalCount
}

// ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse - Portfolios allocation accounts
type ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse struct {
	Data []ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponsePortfoliosAllocationAccount `json:"data"`
	Meta ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta                          `json:"meta"`
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse) GetData() []ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponsePortfoliosAllocationAccount {
	if o == nil {
		return []ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponsePortfoliosAllocationAccount{}
	}
	return o.Data
}

func (o *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse) GetMeta() ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta {
	if o == nil {
		return ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponseMeta{}
	}
	return o.Meta
}

type ListPortfoliosAllocationAccountsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// Portfolios allocation accounts
	PortfoliosAllocationAccountsListResponse *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListPortfoliosAllocationAccountsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListPortfoliosAllocationAccountsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListPortfoliosAllocationAccountsResponse) GetPortfoliosAllocationAccountsListResponse() *ListPortfoliosAllocationAccountsPortfoliosAllocationAccountsListResponse {
	if o == nil {
		return nil
	}
	return o.PortfoliosAllocationAccountsListResponse
}

func (o *ListPortfoliosAllocationAccountsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListPortfoliosAllocationAccountsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
