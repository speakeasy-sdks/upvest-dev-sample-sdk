// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
	"time"
)

type RetrievePortfoliosRebalancingStrategySecurity struct {
	OauthClientCredentials string `security:"scheme,type=oauth2,name=Authorization"`
}

func (o *RetrievePortfoliosRebalancingStrategySecurity) GetOauthClientCredentials() string {
	if o == nil {
		return ""
	}
	return o.OauthClientCredentials
}

type RetrievePortfoliosRebalancingStrategyRequest struct {
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	StrategyID     string `pathParam:"style=simple,explode=false,name=strategy_id"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (r RetrievePortfoliosRebalancingStrategyRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RetrievePortfoliosRebalancingStrategyRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RetrievePortfoliosRebalancingStrategyRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *RetrievePortfoliosRebalancingStrategyRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *RetrievePortfoliosRebalancingStrategyRequest) GetStrategyID() string {
	if o == nil {
		return ""
	}
	return o.StrategyID
}

func (o *RetrievePortfoliosRebalancingStrategyRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *RetrievePortfoliosRebalancingStrategyRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

// RetrievePortfoliosRebalancingStrategyType - The type of the strategy used in the request.
// * DRIFT - Trigger by drift percentage
// * SCHEDULED - Trigger by scheduled date
type RetrievePortfoliosRebalancingStrategyType string

const (
	RetrievePortfoliosRebalancingStrategyTypeDrift     RetrievePortfoliosRebalancingStrategyType = "DRIFT"
	RetrievePortfoliosRebalancingStrategyTypeScheduled RetrievePortfoliosRebalancingStrategyType = "SCHEDULED"
)

func (e RetrievePortfoliosRebalancingStrategyType) ToPointer() *RetrievePortfoliosRebalancingStrategyType {
	return &e
}

func (e *RetrievePortfoliosRebalancingStrategyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRIFT":
		fallthrough
	case "SCHEDULED":
		*e = RetrievePortfoliosRebalancingStrategyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrievePortfoliosRebalancingStrategyType: %v", v)
	}
}

type RetrievePortfoliosRebalancingStrategyConditions struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The type of the ID used in the request.
	// * ISIN - International Securities Identification Number
	// * UPVEST - UPVEST's unique instrument identifier
	Name string `json:"name"`
	// The type of the strategy used in the request.
	// * DRIFT - Trigger by drift percentage
	// * SCHEDULED - Trigger by scheduled date
	Type RetrievePortfoliosRebalancingStrategyType `json:"type"`
}

func (r RetrievePortfoliosRebalancingStrategyConditions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RetrievePortfoliosRebalancingStrategyConditions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RetrievePortfoliosRebalancingStrategyConditions) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *RetrievePortfoliosRebalancingStrategyConditions) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RetrievePortfoliosRebalancingStrategyConditions) GetType() RetrievePortfoliosRebalancingStrategyType {
	if o == nil {
		return RetrievePortfoliosRebalancingStrategyType("")
	}
	return o.Type
}

// RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy - Portfolios
type RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy struct {
	// List of conditions
	Conditions []RetrievePortfoliosRebalancingStrategyConditions `json:"conditions"`
	// Date and time when the resource was created. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	CreatedAt time.Time `json:"created_at"`
	ID        string    `json:"id"`
	// Strategy name
	Name string `json:"name"`
	// Date and time when the resource was last updated. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	UpdatedAt time.Time `json:"updated_at"`
}

func (r RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) GetConditions() []RetrievePortfoliosRebalancingStrategyConditions {
	if o == nil {
		return []RetrievePortfoliosRebalancingStrategyConditions{}
	}
	return o.Conditions
}

func (o *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

type RetrievePortfoliosRebalancingStrategyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// Portfolios
	PortfoliosRebalancingStrategy *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *RetrievePortfoliosRebalancingStrategyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RetrievePortfoliosRebalancingStrategyResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}

func (o *RetrievePortfoliosRebalancingStrategyResponse) GetPortfoliosRebalancingStrategy() *RetrievePortfoliosRebalancingStrategyPortfoliosRebalancingStrategy {
	if o == nil {
		return nil
	}
	return o.PortfoliosRebalancingStrategy
}

func (o *RetrievePortfoliosRebalancingStrategyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RetrievePortfoliosRebalancingStrategyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
