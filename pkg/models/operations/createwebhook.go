// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
	"time"
)

// CreateWebhookWebhookCreateRequestConfig - Configuration of webhook packages collection.
type CreateWebhookWebhookCreateRequestConfig struct {
	// Maximum time of package collection.
	Delay *string `json:"delay,omitempty"`
	// Maximum package size (bytes)
	MaxPackageSize *int64 `json:"max_package_size,omitempty"`
}

func (o *CreateWebhookWebhookCreateRequestConfig) GetDelay() *string {
	if o == nil {
		return nil
	}
	return o.Delay
}

func (o *CreateWebhookWebhookCreateRequestConfig) GetMaxPackageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxPackageSize
}

type CreateWebhookWebhookCreateRequestType string

const (
	CreateWebhookWebhookCreateRequestTypeAll                      CreateWebhookWebhookCreateRequestType = "ALL"
	CreateWebhookWebhookCreateRequestTypeUser                     CreateWebhookWebhookCreateRequestType = "USER"
	CreateWebhookWebhookCreateRequestTypeUserCheck                CreateWebhookWebhookCreateRequestType = "USER_CHECK"
	CreateWebhookWebhookCreateRequestTypeOrder                    CreateWebhookWebhookCreateRequestType = "ORDER"
	CreateWebhookWebhookCreateRequestTypeOrderCancellation        CreateWebhookWebhookCreateRequestType = "ORDER_CANCELLATION"
	CreateWebhookWebhookCreateRequestTypeExecution                CreateWebhookWebhookCreateRequestType = "EXECUTION"
	CreateWebhookWebhookCreateRequestTypePosition                 CreateWebhookWebhookCreateRequestType = "POSITION"
	CreateWebhookWebhookCreateRequestTypeCashBalance              CreateWebhookWebhookCreateRequestType = "CASH_BALANCE"
	CreateWebhookWebhookCreateRequestTypeAccount                  CreateWebhookWebhookCreateRequestType = "ACCOUNT"
	CreateWebhookWebhookCreateRequestTypeAccountGroup             CreateWebhookWebhookCreateRequestType = "ACCOUNT_GROUP"
	CreateWebhookWebhookCreateRequestTypeReport                   CreateWebhookWebhookCreateRequestType = "REPORT"
	CreateWebhookWebhookCreateRequestTypeTreasuryReport           CreateWebhookWebhookCreateRequestType = "TREASURY_REPORT"
	CreateWebhookWebhookCreateRequestTypeDirectDebit              CreateWebhookWebhookCreateRequestType = "DIRECT_DEBIT"
	CreateWebhookWebhookCreateRequestTypeWithdrawal               CreateWebhookWebhookCreateRequestType = "WITHDRAWAL"
	CreateWebhookWebhookCreateRequestTypePortfolio                CreateWebhookWebhookCreateRequestType = "PORTFOLIO"
	CreateWebhookWebhookCreateRequestTypePortfolioAllocation      CreateWebhookWebhookCreateRequestType = "PORTFOLIO_ALLOCATION"
	CreateWebhookWebhookCreateRequestTypePortfolioOrder           CreateWebhookWebhookCreateRequestType = "PORTFOLIO_ORDER"
	CreateWebhookWebhookCreateRequestTypeCorporateAction          CreateWebhookWebhookCreateRequestType = "CORPORATE_ACTION"
	CreateWebhookWebhookCreateRequestTypeAccountValuation         CreateWebhookWebhookCreateRequestType = "ACCOUNT_VALUATION"
	CreateWebhookWebhookCreateRequestTypeIntradayAccountValuation CreateWebhookWebhookCreateRequestType = "INTRADAY_ACCOUNT_VALUATION"
	CreateWebhookWebhookCreateRequestTypeCashTransaction          CreateWebhookWebhookCreateRequestType = "CASH_TRANSACTION"
	CreateWebhookWebhookCreateRequestTypeSecurityTransaction      CreateWebhookWebhookCreateRequestType = "SECURITY_TRANSACTION"
	CreateWebhookWebhookCreateRequestTypeAccountLiquidation       CreateWebhookWebhookCreateRequestType = "ACCOUNT_LIQUIDATION"
	CreateWebhookWebhookCreateRequestTypeAccountReturns           CreateWebhookWebhookCreateRequestType = "ACCOUNT_RETURNS"
	CreateWebhookWebhookCreateRequestTypeVirtualCashIncrease      CreateWebhookWebhookCreateRequestType = "VIRTUAL_CASH_INCREASE"
	CreateWebhookWebhookCreateRequestTypeVirtualCashDecrease      CreateWebhookWebhookCreateRequestType = "VIRTUAL_CASH_DECREASE"
	CreateWebhookWebhookCreateRequestTypeFeeCollection            CreateWebhookWebhookCreateRequestType = "FEE_COLLECTION"
)

func (e CreateWebhookWebhookCreateRequestType) ToPointer() *CreateWebhookWebhookCreateRequestType {
	return &e
}

func (e *CreateWebhookWebhookCreateRequestType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		fallthrough
	case "USER":
		fallthrough
	case "USER_CHECK":
		fallthrough
	case "ORDER":
		fallthrough
	case "ORDER_CANCELLATION":
		fallthrough
	case "EXECUTION":
		fallthrough
	case "POSITION":
		fallthrough
	case "CASH_BALANCE":
		fallthrough
	case "ACCOUNT":
		fallthrough
	case "ACCOUNT_GROUP":
		fallthrough
	case "REPORT":
		fallthrough
	case "TREASURY_REPORT":
		fallthrough
	case "DIRECT_DEBIT":
		fallthrough
	case "WITHDRAWAL":
		fallthrough
	case "PORTFOLIO":
		fallthrough
	case "PORTFOLIO_ALLOCATION":
		fallthrough
	case "PORTFOLIO_ORDER":
		fallthrough
	case "CORPORATE_ACTION":
		fallthrough
	case "ACCOUNT_VALUATION":
		fallthrough
	case "INTRADAY_ACCOUNT_VALUATION":
		fallthrough
	case "CASH_TRANSACTION":
		fallthrough
	case "SECURITY_TRANSACTION":
		fallthrough
	case "ACCOUNT_LIQUIDATION":
		fallthrough
	case "ACCOUNT_RETURNS":
		fallthrough
	case "VIRTUAL_CASH_INCREASE":
		fallthrough
	case "VIRTUAL_CASH_DECREASE":
		fallthrough
	case "FEE_COLLECTION":
		*e = CreateWebhookWebhookCreateRequestType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWebhookWebhookCreateRequestType: %v", v)
	}
}

type CreateWebhookWebhookCreateRequest struct {
	// Configuration of webhook packages collection.
	Config *CreateWebhookWebhookCreateRequestConfig `json:"config,omitempty"`
	// Title of the webhook for use on tenant side.
	Title string `json:"title"`
	// What kind of events to be sent by the webhook.
	Type []CreateWebhookWebhookCreateRequestType `json:"type,omitempty"`
	// The callback URL to be called by the webhook.
	URL string `json:"url"`
}

func (o *CreateWebhookWebhookCreateRequest) GetConfig() *CreateWebhookWebhookCreateRequestConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *CreateWebhookWebhookCreateRequest) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CreateWebhookWebhookCreateRequest) GetType() []CreateWebhookWebhookCreateRequestType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *CreateWebhookWebhookCreateRequest) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type CreateWebhookRequest struct {
	RequestBody *CreateWebhookWebhookCreateRequest `request:"mediaType=application/json"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (c CreateWebhookRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateWebhookRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateWebhookRequest) GetRequestBody() *CreateWebhookWebhookCreateRequest {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *CreateWebhookRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *CreateWebhookRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *CreateWebhookRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *CreateWebhookRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

// CreateWebhookWebhookConfig - Configuration of webhook packages collection.
type CreateWebhookWebhookConfig struct {
	// Maximum time of package collection.
	Delay *string `json:"delay,omitempty"`
	// Maximum package size (bytes)
	MaxPackageSize *int64 `json:"max_package_size,omitempty"`
}

func (o *CreateWebhookWebhookConfig) GetDelay() *string {
	if o == nil {
		return nil
	}
	return o.Delay
}

func (o *CreateWebhookWebhookConfig) GetMaxPackageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxPackageSize
}

type CreateWebhookWebhookType string

const (
	CreateWebhookWebhookTypeAll                      CreateWebhookWebhookType = "ALL"
	CreateWebhookWebhookTypeUser                     CreateWebhookWebhookType = "USER"
	CreateWebhookWebhookTypeUserCheck                CreateWebhookWebhookType = "USER_CHECK"
	CreateWebhookWebhookTypeOrder                    CreateWebhookWebhookType = "ORDER"
	CreateWebhookWebhookTypeOrderCancellation        CreateWebhookWebhookType = "ORDER_CANCELLATION"
	CreateWebhookWebhookTypeExecution                CreateWebhookWebhookType = "EXECUTION"
	CreateWebhookWebhookTypePosition                 CreateWebhookWebhookType = "POSITION"
	CreateWebhookWebhookTypeCashBalance              CreateWebhookWebhookType = "CASH_BALANCE"
	CreateWebhookWebhookTypeAccount                  CreateWebhookWebhookType = "ACCOUNT"
	CreateWebhookWebhookTypeAccountGroup             CreateWebhookWebhookType = "ACCOUNT_GROUP"
	CreateWebhookWebhookTypeReport                   CreateWebhookWebhookType = "REPORT"
	CreateWebhookWebhookTypeTreasuryReport           CreateWebhookWebhookType = "TREASURY_REPORT"
	CreateWebhookWebhookTypeDirectDebit              CreateWebhookWebhookType = "DIRECT_DEBIT"
	CreateWebhookWebhookTypeWithdrawal               CreateWebhookWebhookType = "WITHDRAWAL"
	CreateWebhookWebhookTypePortfolio                CreateWebhookWebhookType = "PORTFOLIO"
	CreateWebhookWebhookTypePortfolioAllocation      CreateWebhookWebhookType = "PORTFOLIO_ALLOCATION"
	CreateWebhookWebhookTypePortfolioOrder           CreateWebhookWebhookType = "PORTFOLIO_ORDER"
	CreateWebhookWebhookTypeCorporateAction          CreateWebhookWebhookType = "CORPORATE_ACTION"
	CreateWebhookWebhookTypeAccountValuation         CreateWebhookWebhookType = "ACCOUNT_VALUATION"
	CreateWebhookWebhookTypeIntradayAccountValuation CreateWebhookWebhookType = "INTRADAY_ACCOUNT_VALUATION"
	CreateWebhookWebhookTypeCashTransaction          CreateWebhookWebhookType = "CASH_TRANSACTION"
	CreateWebhookWebhookTypeSecurityTransaction      CreateWebhookWebhookType = "SECURITY_TRANSACTION"
	CreateWebhookWebhookTypeAccountLiquidation       CreateWebhookWebhookType = "ACCOUNT_LIQUIDATION"
	CreateWebhookWebhookTypeAccountReturns           CreateWebhookWebhookType = "ACCOUNT_RETURNS"
	CreateWebhookWebhookTypeVirtualCashIncrease      CreateWebhookWebhookType = "VIRTUAL_CASH_INCREASE"
	CreateWebhookWebhookTypeVirtualCashDecrease      CreateWebhookWebhookType = "VIRTUAL_CASH_DECREASE"
	CreateWebhookWebhookTypeFeeCollection            CreateWebhookWebhookType = "FEE_COLLECTION"
)

func (e CreateWebhookWebhookType) ToPointer() *CreateWebhookWebhookType {
	return &e
}

func (e *CreateWebhookWebhookType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		fallthrough
	case "USER":
		fallthrough
	case "USER_CHECK":
		fallthrough
	case "ORDER":
		fallthrough
	case "ORDER_CANCELLATION":
		fallthrough
	case "EXECUTION":
		fallthrough
	case "POSITION":
		fallthrough
	case "CASH_BALANCE":
		fallthrough
	case "ACCOUNT":
		fallthrough
	case "ACCOUNT_GROUP":
		fallthrough
	case "REPORT":
		fallthrough
	case "TREASURY_REPORT":
		fallthrough
	case "DIRECT_DEBIT":
		fallthrough
	case "WITHDRAWAL":
		fallthrough
	case "PORTFOLIO":
		fallthrough
	case "PORTFOLIO_ALLOCATION":
		fallthrough
	case "PORTFOLIO_ORDER":
		fallthrough
	case "CORPORATE_ACTION":
		fallthrough
	case "ACCOUNT_VALUATION":
		fallthrough
	case "INTRADAY_ACCOUNT_VALUATION":
		fallthrough
	case "CASH_TRANSACTION":
		fallthrough
	case "SECURITY_TRANSACTION":
		fallthrough
	case "ACCOUNT_LIQUIDATION":
		fallthrough
	case "ACCOUNT_RETURNS":
		fallthrough
	case "VIRTUAL_CASH_INCREASE":
		fallthrough
	case "VIRTUAL_CASH_DECREASE":
		fallthrough
	case "FEE_COLLECTION":
		*e = CreateWebhookWebhookType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWebhookWebhookType: %v", v)
	}
}

// CreateWebhookWebhook - Returns a webhook subscription object if a valid webhook subscription object ID was provided.
type CreateWebhookWebhook struct {
	// Configuration of webhook packages collection.
	Config CreateWebhookWebhookConfig `json:"config"`
	// Date and time when the resource was created. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	CreatedAt time.Time `json:"created_at"`
	// Enable/disable webhook.
	Enabled bool `json:"enabled"`
	// Webhook unique identifier.
	ID string `json:"id"`
	// Title of the webhook for use on tenant side.
	Title string `json:"title"`
	// What kind of events to be sent by the webhook.
	Type []CreateWebhookWebhookType `json:"type"`
	// Date and time when the resource was last updated. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	UpdatedAt time.Time `json:"updated_at"`
	// The callback URL to be called by the webhook.
	URL string `json:"url"`
}

func (c CreateWebhookWebhook) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateWebhookWebhook) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateWebhookWebhook) GetConfig() CreateWebhookWebhookConfig {
	if o == nil {
		return CreateWebhookWebhookConfig{}
	}
	return o.Config
}

func (o *CreateWebhookWebhook) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *CreateWebhookWebhook) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *CreateWebhookWebhook) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateWebhookWebhook) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *CreateWebhookWebhook) GetType() []CreateWebhookWebhookType {
	if o == nil {
		return []CreateWebhookWebhookType{}
	}
	return o.Type
}

func (o *CreateWebhookWebhook) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *CreateWebhookWebhook) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

type CreateWebhookResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Returns a webhook subscription object if a valid webhook subscription object ID was provided.
	Webhook *CreateWebhookWebhook
}

func (o *CreateWebhookResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateWebhookResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *CreateWebhookResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateWebhookResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateWebhookResponse) GetWebhook() *CreateWebhookWebhook {
	if o == nil {
		return nil
	}
	return o.Webhook
}
