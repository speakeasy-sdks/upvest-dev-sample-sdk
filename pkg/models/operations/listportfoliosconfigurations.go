// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
	"time"
)

// ListPortfoliosConfigurationsSort - Sort the result by `account_id`.
type ListPortfoliosConfigurationsSort string

const (
	ListPortfoliosConfigurationsSortAccountID ListPortfoliosConfigurationsSort = "account_id"
)

func (e ListPortfoliosConfigurationsSort) ToPointer() *ListPortfoliosConfigurationsSort {
	return &e
}

func (e *ListPortfoliosConfigurationsSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_id":
		*e = ListPortfoliosConfigurationsSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosConfigurationsSort: %v", v)
	}
}

type ListPortfoliosConfigurationsRequest struct {
	// Filters portfolio configurations by account ID
	AccountID *string `queryParam:"style=form,explode=true,name=account_id"`
	// Filters portfolio configurations by allocation ID
	AllocationID *string `queryParam:"style=form,explode=true,name=allocation_id"`
	// Returns portfolio configurations with dates up until this date (UTC)
	EndDate *string `queryParam:"style=form,explode=true,name=end_date"`
	// Use the `limit` argument to specify the maximum number of items returned.
	Limit *int `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Use the `offset` argument to specify where in the list of results to start when returning items for a particular query.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Sort order of the result list if the `sort` parameter is specified. Use `ASC` for ascending or `DESC` for descending sort order.
	Order *shared.Order `default:"ASC" queryParam:"style=form,explode=true,name=order"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Sort the result by `account_id`.
	Sort *ListPortfoliosConfigurationsSort `default:"account_id" queryParam:"style=form,explode=true,name=sort"`
	// Returns portfolio configurations with dates starting from and including this date (UTC)
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (l ListPortfoliosConfigurationsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosConfigurationsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosConfigurationsRequest) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *ListPortfoliosConfigurationsRequest) GetAllocationID() *string {
	if o == nil {
		return nil
	}
	return o.AllocationID
}

func (o *ListPortfoliosConfigurationsRequest) GetEndDate() *string {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *ListPortfoliosConfigurationsRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPortfoliosConfigurationsRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListPortfoliosConfigurationsRequest) GetOrder() *shared.Order {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosConfigurationsRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *ListPortfoliosConfigurationsRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *ListPortfoliosConfigurationsRequest) GetSort() *ListPortfoliosConfigurationsSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosConfigurationsRequest) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *ListPortfoliosConfigurationsRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *ListPortfoliosConfigurationsRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

type ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration struct {
	// Account unique identifier.
	AccountID    string `json:"account_id"`
	AllocationID string `json:"allocation_id"`
	// Date and time when the resource was created. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	CreatedAt time.Time `json:"created_at"`
	// List of rebalancing strategy ids
	RebalancingStrategyIds []string `json:"rebalancing_strategy_ids,omitempty"`
	// Date and time when the resource was last updated. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	UpdatedAt time.Time `json:"updated_at"`
}

func (l ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) GetAllocationID() string {
	if o == nil {
		return ""
	}
	return o.AllocationID
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) GetRebalancingStrategyIds() []string {
	if o == nil {
		return nil
	}
	return o.RebalancingStrategyIds
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

// ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder - The ordering of the response.
// * ASC - Ascending order
// * DESC - Descending order
type ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder string

const (
	ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrderAsc  ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder = "ASC"
	ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrderDesc ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder = "DESC"
)

func (e ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder) ToPointer() *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder {
	return &e
}

func (e *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder: %v", v)
	}
}

type ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta struct {
	// Count of the resources returned in the response.
	Count int64 `json:"count"`
	// Total limit of the response.
	Limit int64 `json:"limit"`
	// Amount of resource to offset in the response.
	Offset int64 `json:"offset"`
	// The ordering of the response.
	// * ASC - Ascending order
	// * DESC - Descending order
	Order *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder `json:"order,omitempty"`
	// The field that the list is sorted by.
	Sort *string `json:"sort,omitempty"`
	// Total count of all the resources.
	TotalCount int64 `json:"total_count"`
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetCount() int64 {
	if o == nil {
		return 0
	}
	return o.Count
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetOffset() int64 {
	if o == nil {
		return 0
	}
	return o.Offset
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetOrder() *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMetaOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta) GetTotalCount() int64 {
	if o == nil {
		return 0
	}
	return o.TotalCount
}

// ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse - Portfolios configurations
type ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse struct {
	Data []ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration `json:"data"`
	Meta ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta                      `json:"meta"`
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse) GetData() []ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration {
	if o == nil {
		return []ListPortfoliosConfigurationsPortfoliosConfigurationsListResponsePortfoliosConfiguration{}
	}
	return o.Data
}

func (o *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse) GetMeta() ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta {
	if o == nil {
		return ListPortfoliosConfigurationsPortfoliosConfigurationsListResponseMeta{}
	}
	return o.Meta
}

type ListPortfoliosConfigurationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// Portfolios configurations
	PortfoliosConfigurationsListResponse *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListPortfoliosConfigurationsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListPortfoliosConfigurationsResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListPortfoliosConfigurationsResponse) GetPortfoliosConfigurationsListResponse() *ListPortfoliosConfigurationsPortfoliosConfigurationsListResponse {
	if o == nil {
		return nil
	}
	return o.PortfoliosConfigurationsListResponse
}

func (o *ListPortfoliosConfigurationsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListPortfoliosConfigurationsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
