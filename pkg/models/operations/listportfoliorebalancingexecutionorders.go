// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
	"time"
)

// ListPortfolioRebalancingExecutionOrdersSort - Sort the result by `status`.
type ListPortfolioRebalancingExecutionOrdersSort string

const (
	ListPortfolioRebalancingExecutionOrdersSortStatus ListPortfolioRebalancingExecutionOrdersSort = "status"
)

func (e ListPortfolioRebalancingExecutionOrdersSort) ToPointer() *ListPortfolioRebalancingExecutionOrdersSort {
	return &e
}

func (e *ListPortfolioRebalancingExecutionOrdersSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		*e = ListPortfolioRebalancingExecutionOrdersSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfolioRebalancingExecutionOrdersSort: %v", v)
	}
}

type ListPortfolioRebalancingExecutionOrdersRequest struct {
	// Returns rebalancing orders with dates up until this date (UTC)
	EndDate     *string `queryParam:"style=form,explode=true,name=end_date"`
	ExecutionID string  `pathParam:"style=simple,explode=false,name=execution_id"`
	// Use the `limit` argument to specify the maximum number of items returned.
	Limit *int `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Use the `offset` argument to specify where in the list of results to start when returning items for a particular query.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Sort order of the result list if the `sort` parameter is specified. Use `ASC` for ascending or `DESC` for descending sort order.
	Order *shared.Order `default:"ASC" queryParam:"style=form,explode=true,name=order"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Sort the result by `status`.
	Sort *ListPortfolioRebalancingExecutionOrdersSort `default:"status" queryParam:"style=form,explode=true,name=sort"`
	// Returns rebalancing orders with dates starting from and including this date (UTC)
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (l ListPortfolioRebalancingExecutionOrdersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfolioRebalancingExecutionOrdersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetEndDate() *string {
	if o == nil {
		return nil
	}
	return o.EndDate
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetExecutionID() string {
	if o == nil {
		return ""
	}
	return o.ExecutionID
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetOrder() *shared.Order {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetSort() *ListPortfolioRebalancingExecutionOrdersSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetStartDate() *string {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *ListPortfolioRebalancingExecutionOrdersRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

// ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus - Execution status of the Portfolio Order.
// * NEW -
// * PROCESSING -
// * FILLED -
// * SETTLED -
// * CANCELLED -
type ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus string

const (
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatusNew        ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus = "NEW"
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatusProcessing ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus = "PROCESSING"
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatusFilled     ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus = "FILLED"
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatusSettled    ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus = "SETTLED"
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatusCancelled  ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus = "CANCELLED"
)

func (e ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus) ToPointer() *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus {
	return &e
}

func (e *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "FILLED":
		fallthrough
	case "SETTLED":
		fallthrough
	case "CANCELLED":
		*e = ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus: %v", v)
	}
}

type ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder struct {
	// Account unique identifier.
	AccountID string `json:"account_id"`
	// Date and time when the resource was created. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	CreatedAt        time.Time `json:"created_at"`
	PortfolioOrderID string    `json:"portfolio_order_id"`
	// Execution status of the Portfolio Order.
	// * NEW -
	// * PROCESSING -
	// * FILLED -
	// * SETTLED -
	// * CANCELLED -
	Status ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus `json:"status"`
	// Date and time when the resource was last updated. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	UpdatedAt time.Time `json:"updated_at"`
}

func (l ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) GetPortfolioOrderID() string {
	if o == nil {
		return ""
	}
	return o.PortfolioOrderID
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) GetStatus() ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus {
	if o == nil {
		return ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrderStatus("")
	}
	return o.Status
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

// ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder - The ordering of the response.
// * ASC - Ascending order
// * DESC - Descending order
type ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder string

const (
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrderAsc  ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder = "ASC"
	ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrderDesc ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder = "DESC"
)

func (e ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder) ToPointer() *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder {
	return &e
}

func (e *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder: %v", v)
	}
}

type ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta struct {
	// Count of the resources returned in the response.
	Count int64 `json:"count"`
	// Total limit of the response.
	Limit int64 `json:"limit"`
	// Amount of resource to offset in the response.
	Offset int64 `json:"offset"`
	// The ordering of the response.
	// * ASC - Ascending order
	// * DESC - Descending order
	Order *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder `json:"order,omitempty"`
	// The field that the list is sorted by.
	Sort *string `json:"sort,omitempty"`
	// Total count of all the resources.
	TotalCount int64 `json:"total_count"`
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetCount() int64 {
	if o == nil {
		return 0
	}
	return o.Count
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetOffset() int64 {
	if o == nil {
		return 0
	}
	return o.Offset
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetOrder() *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMetaOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta) GetTotalCount() int64 {
	if o == nil {
		return 0
	}
	return o.TotalCount
}

// ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse - Portfolios
type ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse struct {
	Data []ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder `json:"data"`
	Meta ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta                                  `json:"meta"`
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse) GetData() []ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder {
	if o == nil {
		return []ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponsePortfoliosRebalancingExecutionOrder{}
	}
	return o.Data
}

func (o *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse) GetMeta() ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta {
	if o == nil {
		return ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponseMeta{}
	}
	return o.Meta
}

type ListPortfolioRebalancingExecutionOrdersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// Portfolios
	PortfoliosRebalancingExecutionOrderListResponse *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListPortfolioRebalancingExecutionOrdersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListPortfolioRebalancingExecutionOrdersResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListPortfolioRebalancingExecutionOrdersResponse) GetPortfoliosRebalancingExecutionOrderListResponse() *ListPortfolioRebalancingExecutionOrdersPortfoliosRebalancingExecutionOrderListResponse {
	if o == nil {
		return nil
	}
	return o.PortfoliosRebalancingExecutionOrderListResponse
}

func (o *ListPortfolioRebalancingExecutionOrdersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListPortfolioRebalancingExecutionOrdersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
