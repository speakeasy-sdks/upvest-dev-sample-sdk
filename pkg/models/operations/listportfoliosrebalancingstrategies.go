// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/upvest-dev-sample-sdk/pkg/utils"
	"net/http"
	"time"
)

// ListPortfoliosRebalancingStrategiesSort - Sort the result by `id`.
type ListPortfoliosRebalancingStrategiesSort string

const (
	ListPortfoliosRebalancingStrategiesSortID ListPortfoliosRebalancingStrategiesSort = "id"
)

func (e ListPortfoliosRebalancingStrategiesSort) ToPointer() *ListPortfoliosRebalancingStrategiesSort {
	return &e
}

func (e *ListPortfoliosRebalancingStrategiesSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		*e = ListPortfoliosRebalancingStrategiesSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosRebalancingStrategiesSort: %v", v)
	}
}

type ListPortfoliosRebalancingStrategiesRequest struct {
	// Use the `limit` argument to specify the maximum number of items returned.
	Limit *int `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Use the `offset` argument to specify where in the list of results to start when returning items for a particular query.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Sort order of the result list if the `sort` parameter is specified. Use `ASC` for ascending or `DESC` for descending sort order.
	Order *shared.Order `default:"ASC" queryParam:"style=form,explode=true,name=order"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-http-header
	Signature string `header:"style=simple,explode=false,name=signature"`
	// https://tools.ietf.org/id/draft-ietf-httpbis-message-signatures-01.html#name-the-signature-input-http-he
	SignatureInput string `header:"style=simple,explode=false,name=signature-input"`
	// Sort the result by `id`.
	Sort *ListPortfoliosRebalancingStrategiesSort `default:"id" queryParam:"style=form,explode=true,name=sort"`
	// Upvest API version (Note: Do not include quotation marks)
	UpvestAPIVersion *shared.APIVersion `default:"1" header:"style=simple,explode=false,name=upvest-api-version"`
	// Tenant Client ID
	UpvestClientID string `header:"style=simple,explode=false,name=upvest-client-id"`
}

func (l ListPortfoliosRebalancingStrategiesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosRebalancingStrategiesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetOrder() *shared.Order {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetSignature() string {
	if o == nil {
		return ""
	}
	return o.Signature
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetSignatureInput() string {
	if o == nil {
		return ""
	}
	return o.SignatureInput
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetSort() *ListPortfoliosRebalancingStrategiesSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetUpvestAPIVersion() *shared.APIVersion {
	if o == nil {
		return nil
	}
	return o.UpvestAPIVersion
}

func (o *ListPortfoliosRebalancingStrategiesRequest) GetUpvestClientID() string {
	if o == nil {
		return ""
	}
	return o.UpvestClientID
}

// ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType - The type of the strategy used in the request.
// * DRIFT - Trigger by drift percentage
// * SCHEDULED - Trigger by scheduled date
type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType string

const (
	ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsTypeDrift     ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType = "DRIFT"
	ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsTypeScheduled ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType = "SCHEDULED"
)

func (e ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType) ToPointer() *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType {
	return &e
}

func (e *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRIFT":
		fallthrough
	case "SCHEDULED":
		*e = ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType: %v", v)
	}
}

type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The type of the ID used in the request.
	// * ISIN - International Securities Identification Number
	// * UPVEST - UPVEST's unique instrument identifier
	Name string `json:"name"`
	// The type of the strategy used in the request.
	// * DRIFT - Trigger by drift percentage
	// * SCHEDULED - Trigger by scheduled date
	Type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType `json:"type"`
}

func (l ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions) GetType() ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType {
	if o == nil {
		return ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditionsType("")
	}
	return o.Type
}

type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy struct {
	// List of conditions
	Conditions []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions `json:"conditions"`
	// Date and time when the resource was created. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	CreatedAt time.Time `json:"created_at"`
	ID        string    `json:"id"`
	// Strategy name
	Name string `json:"name"`
	// Date and time when the resource was last updated. [RFC 3339-5](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), [ISO8601 UTC](https://www.iso.org/iso-8601-date-and-time-format.html)
	UpdatedAt time.Time `json:"updated_at"`
}

func (l ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) GetConditions() []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions {
	if o == nil {
		return []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategyConditions{}
	}
	return o.Conditions
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

// ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder - The ordering of the response.
// * ASC - Ascending order
// * DESC - Descending order
type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder string

const (
	ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrderAsc  ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder = "ASC"
	ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrderDesc ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder = "DESC"
)

func (e ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder) ToPointer() *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder {
	return &e
}

func (e *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASC":
		fallthrough
	case "DESC":
		*e = ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder: %v", v)
	}
}

type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta struct {
	// Count of the resources returned in the response.
	Count int64 `json:"count"`
	// Total limit of the response.
	Limit int64 `json:"limit"`
	// Amount of resource to offset in the response.
	Offset int64 `json:"offset"`
	// The ordering of the response.
	// * ASC - Ascending order
	// * DESC - Descending order
	Order *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder `json:"order,omitempty"`
	// The field that the list is sorted by.
	Sort *string `json:"sort,omitempty"`
	// Total count of all the resources.
	TotalCount int64 `json:"total_count"`
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetCount() int64 {
	if o == nil {
		return 0
	}
	return o.Count
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetOffset() int64 {
	if o == nil {
		return 0
	}
	return o.Offset
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetOrder() *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMetaOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta) GetTotalCount() int64 {
	if o == nil {
		return 0
	}
	return o.TotalCount
}

// ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse - Portfolios
type ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse struct {
	Data []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy `json:"data"`
	Meta ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta                            `json:"meta"`
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse) GetData() []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy {
	if o == nil {
		return []ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponsePortfoliosRebalancingStrategy{}
	}
	return o.Data
}

func (o *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse) GetMeta() ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta {
	if o == nil {
		return ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponseMeta{}
	}
	return o.Meta
}

type ListPortfoliosRebalancingStrategiesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// Portfolios
	PortfoliosRebalancingStrategyListResponse *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListPortfoliosRebalancingStrategiesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListPortfoliosRebalancingStrategiesResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *ListPortfoliosRebalancingStrategiesResponse) GetPortfoliosRebalancingStrategyListResponse() *ListPortfoliosRebalancingStrategiesPortfoliosRebalancingStrategyListResponse {
	if o == nil {
		return nil
	}
	return o.PortfoliosRebalancingStrategyListResponse
}

func (o *ListPortfoliosRebalancingStrategiesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListPortfoliosRebalancingStrategiesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
